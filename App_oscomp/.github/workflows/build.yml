name: Build CI

on: [push, pull_request]

jobs:
  clippy:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        arch: [x86_64, riscv64, aarch64, loongarch64]
        rust-toolchain: [nightly, nightly-2025-01-18]
    env:
      RUSTUP_TOOLCHAIN: ${{ matrix.rust-toolchain }}
    steps:
    - uses: actions/checkout@v4
    - uses: dtolnay/rust-toolchain@stable
      with:
        toolchain: ${{ matrix.rust-toolchain }}
        components: rust-src, clippy, rustfmt
        targets: x86_64-unknown-none, riscv64gc-unknown-none-elf, aarch64-unknown-none, aarch64-unknown-none-softfloat, loongarch64-unknown-none
    - uses: Swatinem/rust-cache@v2
    - name: Check rust version
      run: rustc --version --verbose
    - uses: ./.github/workflows/actions/setup-musl
      with:
        arch: x86_64
    - uses: ./.github/workflows/actions/setup-musl
      with:
        arch: riscv64
    - uses: ./.github/workflows/actions/setup-musl
      with:
        arch: aarch64
    - uses: ./.github/workflows/actions/setup-musl
      with:
        arch: loongarch64
    - name: Check code format
      if: ${{ matrix.arch == 'x86_64' }}
      continue-on-error: ${{ matrix.rust-toolchain == 'nightly' }}
      run: cargo fmt --all -- --check
    - name: Clippy for the default target
      if: ${{ matrix.arch == 'x86_64' }}
      continue-on-error: ${{ matrix.rust-toolchain == 'nightly' }}
      run: make clippy
    - name: Clippy for ${{ matrix.arch }}
      continue-on-error: ${{ matrix.rust-toolchain == 'nightly' }}
      run: make clippy ARCH=${{ matrix.arch }}

  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        arch: [x86_64, riscv64, aarch64, loongarch64]
        rust-toolchain: [nightly, nightly-2025-01-18]
    env:
      RUSTUP_TOOLCHAIN: ${{ matrix.rust-toolchain }}
    steps:
    - uses: actions/checkout@v4
    - uses: dtolnay/rust-toolchain@stable
      with:
        toolchain: ${{ matrix.rust-toolchain }}
        components: rust-src, llvm-tools
        targets: x86_64-unknown-none, riscv64gc-unknown-none-elf, aarch64-unknown-none, aarch64-unknown-none-softfloat, loongarch64-unknown-none
    - uses: Swatinem/rust-cache@v2
    - run: cargo install cargo-binutils

    - uses: ./.github/workflows/actions/setup-musl
      with:
        arch: ${{ matrix.arch }}

    - name: Setup AstrancE kernel
      continue-on-error: ${{ matrix.rust-toolchain == 'nightly' }}
      run: |
        make fetch_ax
        make ax_root

    - name: Build testcases
      continue-on-error: ${{ matrix.rust-toolchain == 'nightly' }}
      run: make ARCH=${{ matrix.arch }} testcases

    - name: Build app
      continue-on-error: ${{ matrix.rust-toolchain == 'nightly' }}
      run: make ARCH=${{ matrix.arch }} build
        
  #build-for-other-platforms:
    #runs-on: ${{ matrix.os }}
    #strategy:
      #fail-fast: false
      #matrix:
        #os: [ubuntu-latest]
        #rust-toolchain: [nightly, nightly-2025-01-18]
    #steps:
    #- uses: actions/checkout@v4
    #- uses: dtolnay/rust-toolchain@stable
      #with:
        #toolchain: ${{ matrix.rust-toolchain }}
        #components: rust-src, llvm-tools
        #targets: x86_64-unknown-none, riscv64gc-unknown-none-elf, aarch64-unknown-none, aarch64-unknown-none-softfloat, loongarch64-unknown-none
    #- uses: Swatinem/rust-cache@v2
    #- run: cargo install cargo-binutils
