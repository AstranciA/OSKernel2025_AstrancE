# Architecture identifier.
arch = "loongarch64"
# Platform identifier.
platform = "loongarch64-2k1000"

#
# Platform configs
#
[plat]
# Platform family.
family = "loongarch64-2k1000"

## Base address of the whole physical memory.
#phys-memory-base = 0x8000_0000        # uint
## Size of the whole physical memory. (128M)
##phys-memory-size = 0x800_0000         # uint
## Size of the whole physical memory. (1G)
#phys-memory-size = 0x4000_0000      # uint
## Base physical address of the kernel image.
#kernel-base-paddr = 0x8000_0000       # uint

## Base virtual address of the kernel image.
#kernel-base-vaddr = "0x8000_0000"     # uint
## Linear mapping offset, for quick conversions between physical and virtual
## addresses.
#phys-virt-offset = "0x0"      # uint
## Offset of bus address and phys address. some boards, the bus address is
## different from the physical address.
#phys-bus-offset = 0                             # uint
## Kernel address space base.
#kernel-aspace-base = "0xffff_0000_0000_0000"    # uint
## Kernel address space size.
#kernel-aspace-size = "0x0000_ffff_ffff_f000"    # uint

# ===================
## Base address of the whole physical memory.
#phys-memory-base = "0xa000_0000"       # uint
## Size of the whole physical memory. (1G)
#phys-memory-size = 0x4000_0000      # uint
## Base physical address of the kernel image.
#kernel-base-paddr = "0xa000_0000"       # uint

## Base virtual address of the kernel image.
#kernel-base-vaddr = "0xffff_ffc0_a000_0000"     # uint
## Linear mapping offset, for quick conversions between physical and virtual
## addresses.
#phys-virt-offset = "0xffff_ffc0_0000_0000"      # uint
## Offset of bus address and phys address. some boards, the bus address is
## different from the physical address.
#phys-bus-offset = 0                             # uint
## Kernel address space base.
#kernel-aspace-base = "0xffff_0000_0000_0000"    # uint
## Kernel address space size.
#kernel-aspace-size = "0x0000_ffff_ffff_f000"    # uint
# ===================

# ===================
# Base address of the whole physical memory.
phys-memory-base = "0x9000_0000_9800_0000" # uint
# Size of the whole physical memory. (1G)
phys-memory-size = 0x4000_0000 # uint
# Base physical address of the kernel image.
kernel-base-paddr = "0x9800_0000" # uint

# Base virtual address of the kernel image.
#kernel-base-vaddr = "0xffff_0000_8000_0000"     # uint
#kernel-base-vaddr = "0x8000_0000"     # uint
kernel-base-vaddr = "0x9000_0000_9800_0000" # uint
# Linear mapping offset, for quick conversions between physical and virtual
# addresses.
phys-virt-offset = "0x0" # uint
# Offset of bus address and phys address. some boards, the bus address is
# different from the physical address.
phys-bus-offset = 0 # uint
# Kernel address space base.
kernel-aspace-base = "0x9000_0000_0000_0000" # uint
# Kernel address space size.
kernel-aspace-size = "0x0000_ffff_ffff_f000" # uint
# ===================

#
# Device specifications
#
[devices]
# MMIO regions with format (`base_paddr`, `size`).
mmio-regions = [
  #[0x1fe2_0000, 0x1000], # uart
] # [(uint, uint)]
# VirtIO MMIO regions with format (`base_paddr`, `size`).
virtio-mmio-regions = [] # [(uint, uint)]
# Base physical address of the PCIe ECAM space.
pci-ecam-base = "0x9000_0000_2000_0000" # uint
# End PCI bus number.
pci-bus-end = 0x16 # uint
# PCI device memory ranges.
pci-ranges = [[0, 0], ["0x9000_0000_2000_0000", 0x2000_0000]] # [(uint, uint)]
# poweroff {
#     value = <0x00000034>;
#     offset = <0x00000000>;
#     compatible = "syscon-poweroff";
# };
# ged@100e001c {
#     reg-io-width = <0x00000001>;
#     reg-shift = <0x00000000>;
#     reg = <0x00000000 0x100e001c 0x00000000 0x00000003>;
#     compatible = "syscon";
# };
ged-paddr = 0x100E001C # uint
# serial@1fe001e0 {
#     interrupt-parent = <0x00008003>;
#     interrupts = <0x00000002 0x00000004>;
#     clock-frequency = <0x05f5e100>;
#     reg = <0x00000000 0x1fe001e0 0x00000000 0x00000100>;
#     compatible = "ns16550a";
# };
uart-paddr = 0x1fe2_0000 # uint

# Timer interrupt frequency in Hz.
timer-frequency = 100_000_000 # uint
